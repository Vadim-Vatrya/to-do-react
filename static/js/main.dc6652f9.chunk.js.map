{"version":3,"sources":["Component/Filter/Filter.jsx","Component/TodoEditor/TodoEditor.jsx","Component/Container/Container.jsx","Component/TodoList/TodoList.jsx","App.js","index.js"],"names":["Filter","value","onChange","type","TodoEditor","state","message","handleChange","e","setState","currentTarget","handleSubmit","preventDefault","props","onSubmit","className","this","Component","Container","children","TodoList","todos","onDeleteTodo","onToggleCompleted","map","id","text","completed","classNames","checked","onClick","App","initialTodos","filter","addTodo","todo","shortid","generate","deleteTodo","todoId","prevState","changeFilter","toggleCompleted","getVisibleTodos","normalizedFilter","toLowerCase","includes","calculateCompletedTodos","reduce","total","totalTodoCount","length","completedTodoCounts","visibleTodos","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"guBASeA,EANA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACb,sHACkB,uBAAOC,KAAK,OAAOF,MAAOA,EAAOC,SAAUA,QC+BhDE,G,kNAhCbC,MAAQ,CACNC,QAAS,I,EAGXC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEH,QAASE,EAAEE,cAAcT,S,EAG3CU,aAAe,SAAAH,GACbA,EAAEI,iBAEF,EAAKC,MAAMC,SAAS,EAAKT,MAAMC,SAE/B,EAAKG,SAAS,CAAEH,QAAS,M,4CAG3B,WACE,OACE,uBAAMS,UAAU,aAAaD,SAAUE,KAAKL,aAA5C,UACE,0BACEI,UAAU,uBACVd,MAAOe,KAAKX,MAAMC,QAClBJ,SAAUc,KAAKT,eAEjB,wBAAQJ,KAAK,SAASY,UAAU,qBAAhC,2E,GAzBiBE,cCEVC,G,MAFG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,qBAAKJ,UAAU,YAAf,SAA4BI,M,iBC6BjDC,G,MA5BE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,aAAcC,EAAxB,EAAwBA,kBAAxB,OACf,oBAAIR,UAAU,WAAd,SACGM,EAAMG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAb,OACT,qBAEEZ,UAAWa,IAAW,iBAAkB,CACtC,4BAA6BD,IAHjC,UAME,uBACExB,KAAK,WACLY,UAAU,qBACVc,QAASF,EACTzB,SAAU,kBAAMqB,EAAkBE,MAEpC,mBAAGV,UAAU,iBAAb,SAA+BW,IAC/B,wBACEvB,KAAK,SACLY,UAAU,gBACVe,QAAS,kBAAMR,EAAaG,IAH9B,0DAZKA,U,QCoFEM,E,4MAjFb1B,MAAQ,CACNgB,MAAOW,EACPC,OAAQ,I,EAGVC,QAAU,SAAAR,GACR,IAAMS,EAAO,CACXV,GAAIW,IAAQC,WACZX,OACAC,WAAW,GAGb,EAAKlB,UAAS,gBAAGY,EAAH,EAAGA,MAAH,MAAgB,CAC5BA,MAAM,CAAEc,GAAH,mBAAYd,S,EAIrBiB,WAAa,SAACC,GACZ,EAAK9B,UAAS,SAAC+B,GAAD,MAAgB,CAC5BnB,MAAOmB,EAAUnB,MAAMY,QAAO,SAACE,GAAD,OAAUA,EAAKV,KAAOc,U,EAIxDE,aAAe,SAAAjC,GACb,EAAKC,SAAS,CAACwB,OAAQzB,EAAEE,cAAcT,S,EAGzCyC,gBAAkB,SAACH,GACjB,EAAK9B,UAAS,kBAAgB,CAC5BY,MADY,EAAGA,MACFG,KAAI,SAACW,GAAD,OACfA,EAAKV,KAAOc,EAAZ,2BAA0BJ,GAA1B,IAAgCR,WAAYQ,EAAKR,YAAcQ,U,EAKrEQ,gBAAkB,WAChB,MAA0B,EAAKtC,MAAvB4B,EAAR,EAAQA,OAAQZ,EAAhB,EAAgBA,MACVuB,EAAmBX,EAAOY,cAEhC,OAAOxB,EAAMY,QAAO,SAAAE,GAAI,OACtBA,EAAKT,KAAKmB,cAAcC,SAASF,O,EAIrCG,wBAA0B,WAGxB,OAFkB,EAAK1C,MAAfgB,MAEK2B,QACX,SAACC,EAAOd,GAAR,OAAkBA,EAAKR,UAAYsB,EAAQ,EAAIA,IAC/C,I,4CAIJ,WACE,MAA0BjC,KAAKX,MAAvBgB,EAAR,EAAQA,MAAOY,EAAf,EAAeA,OACTiB,EAAiB7B,EAAM8B,OACvBC,EAAsBpC,KAAK+B,0BAC3BM,EAAerC,KAAK2B,kBAE1B,OACE,eAAC,EAAD,WACE,qJAEA,cAAC,EAAD,CAAY7B,SAAUE,KAAKkB,UAE3B,gCACE,8HAAsBgB,EAAtB,OACA,4JAA2BE,EAA3B,UAGF,cAAC,EAAD,CAAQnD,MAAOgC,EAAQ/B,SAAUc,KAAKyB,eACtC,cAAC,EAAD,CACEpB,MAAOgC,EACP/B,aAAcN,KAAKsB,WACnBf,kBAAmBP,KAAK0B,yB,GA3EhBzB,aCHlBqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dc6652f9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Filter.scss\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Фильтр по имени <input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport './TodoEditor.scss';\r\n\r\nclass TodoEditor extends Component {\r\n  state = {\r\n    message: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ message: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.message);\r\n\r\n    this.setState({ message: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"TodoEditor\" onSubmit={this.handleSubmit}>\r\n        <textarea\r\n          className=\"TodoEditor__textarea\"\r\n          value={this.state.message}\r\n          onChange={this.handleChange}\r\n        ></textarea>\r\n        <button type=\"submit\" className=\"TodoEditor__button\">\r\n          Сохранить\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoEditor;","import React from 'react';\r\nimport './Container.scss';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport \"./TodoList.scss\";\r\n\r\nconst TodoList = ({ todos, onDeleteTodo, onToggleCompleted }) => (\r\n  <ul className=\"TodoList\">\r\n    {todos.map(({ id, text, completed }) => (\r\n      <li\r\n        key={id}\r\n        className={classNames('TodoList__item', {\r\n          'TodoList__item--completed': completed,\r\n        })}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"TodoList__checkbox\"\r\n          checked={completed}\r\n          onChange={() => onToggleCompleted(id)}\r\n        />\r\n        <p className=\"TodoList__text\">{text}</p>\r\n        <button\r\n          type=\"button\"\r\n          className=\"TodoList__btn\"\r\n          onClick={() => onDeleteTodo(id)}\r\n        >\r\n          Удалить\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default TodoList;","import React, { Component } from \"react\";\nimport shortid from 'shortid';\n\nimport Filter from \"./Component/Filter\";\nimport TodoEditor from \"./Component/TodoEditor\";\nimport Container from \"./Component/Container\";\nimport TodoList from \"./Component/TodoList\";\nimport initialTodos from \"./todos.json\";\n\n\nclass App extends Component {\n  state = {\n    todos: initialTodos,\n    filter: '',\n  };\n\n  addTodo = text => {\n    const todo = {\n      id: shortid.generate(),\n      text,\n      completed: false,\n    };\n\n    this.setState(({ todos }) => ({\n      todos: [todo, ...todos],\n    }));\n  };\n\n  deleteTodo = (todoId) => {\n    this.setState((prevState) => ({\n      todos: prevState.todos.filter((todo) => todo.id !== todoId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({filter: e.currentTarget.value})\n  };\n\n  toggleCompleted = (todoId) => {\n    this.setState(({ todos }) => ({\n      todos: todos.map((todo) =>\n        todo.id === todoId ? { ...todo, completed: !todo.completed } : todo\n      ),\n    }));\n  };\n\n  getVisibleTodos = () => {\n    const { filter, todos } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return todos.filter(todo =>\n      todo.text.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  calculateCompletedTodos = () => {\n    const { todos } = this.state;\n\n    return todos.reduce(\n      (total, todo) => (todo.completed ? total + 1 : total),\n      0,\n    );\n  };\n\n  render() {\n    const { todos, filter } = this.state;\n    const totalTodoCount = todos.length;\n    const completedTodoCounts = this.calculateCompletedTodos();\n    const visibleTodos = this.getVisibleTodos();\n\n    return (\n      <Container>\n        <h1>Состояние компонента</h1>\n\n        <TodoEditor onSubmit={this.addTodo} />\n\n        <div>\n          <p>Общее количество: {totalTodoCount} </p>\n          <p>Количество выполненых: {completedTodoCounts} </p>\n        </div>\n\n        <Filter value={filter} onChange={this.changeFilter}/>\n        <TodoList\n          todos={visibleTodos}\n          onDeleteTodo={this.deleteTodo}\n          onToggleCompleted={this.toggleCompleted}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}