{"version":3,"sources":["Component/Filter/Filter.jsx","Component/TodoEditor/TodoEditor.jsx","Component/Container/Container.jsx","Component/Todo/Todo.jsx","Component/TodoList/TodoList.jsx","Component/Modal/Modal.jsx","App.js","index.js"],"names":["Filter","value","onChange","type","TodoEditor","state","message","handleChange","e","setState","currentTarget","handleSubmit","preventDefault","props","onSubmit","className","this","Component","Container","children","Todo","text","completed","onToggleCompleted","onDelete","checked","onClick","TodoList","todos","onDeleteTodo","map","id","classNames","Modal","handleKeyDown","code","console","log","onClose","handleBackdropClick","event","App","initialTodos","filter","showModal","toggleModal","addTodo","todo","shortid","generate","deleteTodo","todoId","prevState","changeFilter","toggleCompleted","getVisibleTodos","normalizedFilter","toLowerCase","includes","calculateCompletedTodos","reduce","total","componentDidMount","localStorage","getItem","parsedTodos","JSON","parse","componentDidUpdate","prevProps","setItem","stringify","totalTodoCount","length","completedTodoCounts","visibleTodos","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3ef0c3c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Filter.scss\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Фильтр по имени <input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport './TodoEditor.scss';\r\n\r\nclass TodoEditor extends Component {\r\n  state = {\r\n    message: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ message: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.message);\r\n\r\n    this.setState({ message: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"TodoEditor\" onSubmit={this.handleSubmit}>\r\n        <textarea\r\n          className=\"TodoEditor__textarea\"\r\n          value={this.state.message}\r\n          onChange={this.handleChange}\r\n        ></textarea>\r\n        <button type=\"submit\" className=\"TodoEditor__button\">\r\n          Сохранить\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoEditor;","import React from 'react';\r\nimport './Container.scss';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;\r\n","import React from 'react';\r\n\r\nconst Todo = ({ text, completed, onToggleCompleted, onDelete }) => (\r\n  <>\r\n    <input\r\n      type=\"checkbox\"\r\n      className=\"TodoList__checkbox\"\r\n      checked={completed}\r\n      onChange={onToggleCompleted}\r\n    />\r\n    <p className=\"TodoList__text\">{text}</p>\r\n    <button type=\"button\" className=\"TodoList__btn\" onClick={onDelete}>\r\n      Удалить\r\n    </button>\r\n  </>\r\n);\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport Todo from '../Todo';\r\nimport \"./TodoList.scss\";\r\n\r\nconst TodoList = ({ todos, onDeleteTodo, onToggleCompleted }) => (\r\n  <ul className=\"TodoList\">\r\n    {todos.map(({ id, text, completed }) => (\r\n      <li\r\n        key={id}\r\n        className={classNames(\"TodoList__item\", {\r\n          \"TodoList__item--completed\": completed,\r\n        })}\r\n      >\r\n        <Todo text={text} \r\n        completed={completed}\r\n        onToggleCompleted={() => onToggleCompleted(id)}\r\n        onDelete={() => onDeleteTodo(id)}\r\n        />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default TodoList;\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    console.log('Modal componentDidMount');\r\n    // window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log('Modal componentWillUnmount');\r\n    // window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      console.log('Нажали ESC, нужно закрыть модалку');\r\n\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    // console.log('Кликнули в бекдроп');\r\n\r\n    // console.log('currentTarget: ', event.currentTarget);\r\n    // console.log('target: ', event.target);\r\n\r\n  //   if (event.currentTarget === event.target) {\r\n  //     this.props.onClose();\r\n  //   }\r\n  };\r\n\r\n \r\n\r\n  render() {\r\n    return(\r\n      <div className=\"Modal__backdrop\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal__content\">{this.props.children}</div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from \"react\";\nimport shortid from 'shortid';\n\nimport Filter from \"./Component/Filter\";\nimport TodoEditor from \"./Component/TodoEditor\";\nimport Container from \"./Component/Container\";\nimport TodoList from \"./Component/TodoList\";\nimport Modal from './Component/Modal';\nimport initialTodos from \"./todos.json\";\n\n\nclass App extends Component {\n  state = {\n    todos: initialTodos,\n    filter: '',\n    showModal: false,\n  };\n\n  toggleModal = () => {\n    this.setState(({showModal}) => ({\n      showModal: !showModal\n    }))\n  }\n\n  addTodo = text => {\n    const todo = {\n      id: shortid.generate(),\n      text,\n      completed: false,\n    };\n\n    this.setState(({ todos }) => ({\n      todos: [todo, ...todos],\n    }));\n  };\n\n  deleteTodo = (todoId) => {\n    this.setState((prevState) => ({\n      todos: prevState.todos.filter((todo) => todo.id !== todoId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({filter: e.currentTarget.value})\n  };\n\n  toggleCompleted = (todoId) => {\n    this.setState(({ todos }) => ({\n      todos: todos.map((todo) =>\n        todo.id === todoId ? { ...todo, completed: !todo.completed } : todo\n      ),\n    }));\n  };\n\n  getVisibleTodos = () => {\n    const { filter, todos } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return todos.filter(todo =>\n      todo.text.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  calculateCompletedTodos = () => {\n    const { todos } = this.state;\n\n    return todos.reduce(\n      (total, todo) => (todo.completed ? total + 1 : total),\n      0,\n    );\n  };\n\n  componentDidMount = () => {\n    const todos = localStorage.getItem('todos');\n    const parsedTodos = JSON.parse(todos);\n\n    if (parsedTodos) {\n      this.setState({ todos: parsedTodos });\n    }\n  }\n\n  componentDidUpdate = (prevState, prevProps) => {\n\n    if(this.state.todos !== prevState.todos) {\n      localStorage.setItem('todos', JSON.stringify(this.state.todos))\n    }\n\n  }\n\n  render() {\n    const { todos, filter, showModal } = this.state;\n    const totalTodoCount = todos.length;\n    const completedTodoCounts = this.calculateCompletedTodos();\n    const visibleTodos = this.getVisibleTodos();\n\n    return (\n      <Container>\n        <h1>Состояние компонента</h1>\n        \n        {showModal && <Modal />}\n\n        <TodoEditor onSubmit={this.addTodo} />\n\n        <div>\n          <p>Общее количество: {totalTodoCount} </p>\n          <p>Количество выполненых: {completedTodoCounts} </p>\n        </div>\n\n        <Filter value={filter} onChange={this.changeFilter}/>\n        <TodoList\n          todos={visibleTodos}\n          onDeleteTodo={this.deleteTodo}\n          onToggleCompleted={this.toggleCompleted}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}